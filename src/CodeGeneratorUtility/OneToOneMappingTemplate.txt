              Field<{0}Type, {0}>()
                .Name("{1}")
                .Description("Related {1}")
                .ResolveAsync(context =>
                {{

                    Func<IEnumerable<CompositeKey>, CancellationToken, Task<IDictionary<CompositeKey, {0}>>> batchLoaderLogic = async (ids, cancelToken) =>
                    {{
                        var aggregatedResults = await ChildQueryHelper.Get<{0}>("{2}", queryFactoryHelper, ids);
                        var dict = new Dictionary<CompositeKey, {0}>(new CompositeKey.MyEqualityComparer());
                        foreach (var r in aggregatedResults)
                        {{
                            var fkFields = new Dictionary<string, object>()
                                {{
                                    {5}
                                }};
                            var key = new CompositeKey(fkFields);
                            dict.TryAdd(key, r);
                        }}

                        return dict;
                    }};

                    var dataLoader = dataLoaderContextAccessor.Context.GetOrAddBatchLoader("{3}_{0}", batchLoaderLogic);
                    var parentFields = new Dictionary<string, object>()
                    {{
                        {4}
                    }};
                    return dataLoader.LoadAsync(new CompositeKey(parentFields));

                }});
