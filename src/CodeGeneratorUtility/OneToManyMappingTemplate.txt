            Field<ListGraphType<{0}Type>, IEnumerable<{0}>>()
                  .Name("{1}")
                  .Description("Related {1}")
                  .ResolveAsync(context =>
                  {{

                      Func<IEnumerable<CompositeKey>, CancellationToken, Task<ILookup<CompositeKey, {0}>>> batchLoaderLogic = async (ids, cancelToken) =>
                      {{
                          var aggregatedResults = await ChildQueryHelper.Get<{0}>("{2}", queryFactoryHelper, ids);
                          var coll = new List<Tuple<CompositeKey, {0}>>();
                          foreach (var r in aggregatedResults)
                          {{
                              var fkFields = new Dictionary<string, object>()
                              {{
                                  {5}
                              }};
                              var key = new CompositeKey(fkFields);
                              coll.Add(new Tuple<CompositeKey, {0}>(key, r));
                          }}

                          return coll.ToLookup(pair => pair.Item1, pair => pair.Item2, new CompositeKey.MyEqualityComparer());
                      }};

                      var dataLoader = dataLoaderContextAccessor.Context.GetOrAddCollectionBatchLoader("{3}_{0}", batchLoaderLogic);
                      var parentFields = new Dictionary<string, object>()
                      {{
                          {4}
                      }};
                      return dataLoader.LoadAsync(new CompositeKey(parentFields));

                  }});
